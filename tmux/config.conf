# remap prefix to Control+a - Vim uses C-b
set -g prefix C-a
# set -g prefix2 C-b
unbind C-b
bind C-a send-prefix

# enforce vim mode
set-window-option -g mode-keys vi

# fix copy/paste
set-option -g default-command "reattach-to-user-namespace -l /usr/local/bin/fish"

# fix copy/paste in tmux's visual selection + copy; and paste
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
unbind ]
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# force a reload of the config file
unbind r
bind r source-file ~/.config/tmux/config.conf \; display-message "Config reloaded."

# use UTF8
#set-option -g utf8
#set-window-option -g utf8 on
#set-option -g status-utf8 on

# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
# clock
set-window-option -g clock-mode-colour green #green

set-option -g status-interval 5
set-option -g status-justify centre # center align window list
set-option -g status-left-length 40
set-option -g status-right-length 140
# show session name, window & pane number, hostname
set-option -g status-left '#[fg=blue]#S #I:#P #[fg=black]• #[fg=green]#H'
#set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load -i 1) #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'
## Has battery and uptime
# set-option -g status-right '#[fg=blue]#(~/bin/battery.sh) #[fg=black]• #[fg=white,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=green,bg=default]%l:%M %p#[default] #[fg=red]%a, %Y-%m-%d'
## Has uptime
#set-option -g status-right '#[fg=white,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=green,bg=default]%l:%M %p#[default] #[fg=red]%a, %Y-%m-%d'
set-option -g status-right '#[fg=green,bg=default]%l:%M %p#[default] #[fg=red]%a, %Y-%m-%d'

# set scrollback history to 10k
set-option -g history-limit 10000

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
set-window-option -g pane-base-index 1

# make the current window the first window
unbind T
bind T swap-window -t 1

# map Vim movement keys as pane movement keys
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l
bind l select-pane -R

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# set window split
unbind v
bind v split-window -h -c "#{pane_current_path}"
unbind b
bind b split-window -v -c "#{pane_current_path}"

# quick window cycling
unbind ^S
bind ^S last-window

# rebind kill windows to X, rather &
unbind X
bind X confirm-before -p "kill-window #W? (y/n)" kill-window

# new windows
unbind c
bind c new-window -c "#{pane_current_path}"

# visual notifications of activity in other windows
set-window-option -g monitor-activity on
set-option -g visual-activity on

# allow for faster key repetition
set-option -s escape-time 0

# constrain windows to the size of the smallest client actually displaying the window
set-window-option -g aggressive-resize on

# copy pane buffer to vim
unbind /
bind / capture-pane -S -102400 -J \; new-window -a 'vim -c ":read !tmux save-buffer - ; tmux delete-buffer;" -c ":normal gg" -c ":set buftype=nofile" -c ":silent! ChompWhitespace"'

# local conf
if "test -f ~/.config/tmux/local.conf" "source-file ~/.config/tmux/local.conf"
if "test -f ~/.config/tmux/local-colors.conf" "source-file ~/.config/tmux/local-colors.conf"

